global
    log /dev/log	local0
    log /dev/log	local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets


defaults
    log	global
    mode	http
    option	httplog
    option	dontlognull
        timeout connect 50000
        timeout client  50000
        timeout server  20000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http


frontend http_https_www
    bind *:80
    {%- if ssl_folder_not_empty %}
    bind *:443 ssl crt /ssl/ alpn h2,http/1.1 ssl-min-ver TLSv1.2
    {%- endif %}
    
    acl letsencrypt-acl path_beg /.well-known/acme-challenge/

    # Template ACLs
    {%- for www_site in yaml_db["sites"] %}
    {%- if www_site["www_redirection"] and www_site["active"] %}
    acl www.{{ www_site["site_name"] }} hdr_beg(host) -i www.{{ www_site["site_name"] }}
    {%- endif %}
    {%- endfor %}

    # HTTPs redirection
    http-request redirect scheme https code 301 unless letsencrypt-acl or {{ '{' }} ssl_fc {{ '}' }}

    # WWW redirection
    {%- for www_site in yaml_db["sites"] %}
    {%- if www_site["www_redirection"] and www_site["active"] %}
    http-request redirect code 301 location https://{{ www_site["site_name"] }} if www.{{ www_site["site_name"] }} !letsencrypt-acl
    {%- endif %}
    {%- endfor %}

    # Link from front to backend
    use_backend letsencrypt-backend if letsencrypt-acl
    {%- for site in yaml_db["sites"] %}
    {%- if site["active"] %}
    use_backend {{ site["site_name"] }} if {{ '{' }} hdr(host) -i {{ site["site_name"] }} {{ '}' }}
    {%- endif %}
    {%- endfor %}


# Backend servers
backend letsencrypt-backend
    server letsencrypt 127.0.0.1:8888

{%- for site in yaml_db["sites"] %}
{%- if site["active"] %}

backend {{ site["site_name"] }}
    balance leastconn
    option httpchk HEAD /
    timeout http-request 10s
    timeout http-keep-alive 5s
    timeout queue 5s
    timeout tunnel 2m
    {%- if site["use_x_realip"] %}
    option forwardfor header X-Real-IP
    http-request set-header X-Real-IP %[src]
    {%- else %}
    option forwardfor
    {%- endif %}
    {%- for backend in site["backend_servers"] %}
    {%- set number = loop.index %}
    server {% if backend["backend_server_name"] %}{{ backend["backend_server_name"] }}{% else %}{{ site["site_name"] }}_{{ number }}{% endif %} {{ backend["backend_server_address"] }}{% if backend["backend_server_health_check"] %} check{% endif %}{% if backend["backend_server_http2"] %} ssl verify none{% endif %}{% if backend["backend_server_https"] %} alpn h2,http/1.1{% endif %}
    {%- endfor %}
{%- endif %}
{%- endfor %}


# Stats page
frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if TRUE
